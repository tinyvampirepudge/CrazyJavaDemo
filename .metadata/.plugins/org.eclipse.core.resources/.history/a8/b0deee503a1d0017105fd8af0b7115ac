package com.tiny.demo;

import java.util.Arrays;

public class ArraysTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("ArraysTest");
		// 定义一个a数组
		int[] a = new int[] { 3, 4, 5, 6 };
		// 定义一个a2数组
		int[] a2 = new int[] { 3, 4, 5, 6 };
		// a数组和a2数组的长度相等，每个元素依次相等，将输出true.
		// --> Arrays.equals(a, a2)
		System.out.println("a数组和a2数组相等 --> " + Arrays.equals(a, a2));
		// 通过复制数组，生成一个新的数组 --> Arrays.copyOf(bStrings, 3)
		// 输出数组的值 --> Arrays.toString(bStrings)
		String[] bStrings = new String[] { "qwe", "wer", "ert", "rty", };
		System.out.println("bStrings --> " + Arrays.toString(bStrings));
		System.out.println("bStrings copy 3 --> " + Arrays.toString(Arrays.copyOf(bStrings, 3)));
		System.out.println("bStrings copy 7 --> " + Arrays.toString(Arrays.copyOf(bStrings, 7)));
		// 旧数组复制到新数组
		System.arraycopy(a, 2, a2, 0, 2);
		System.out.println("a2 after System.arrayCopy() --> " + Arrays.toString(a2));

		// 对数组进行排序,默认升序排列 --> Arrays.sort(bStrings);
		Arrays.sort(bStrings);
		System.out.println("对数组进行排序 --> " + Arrays.toString(bStrings));
		int[] a3 = new int[] { 1, 7, 5, 2, 45, 67, 98, 4 };

		Arrays.sort(a3);
		System.out.println("a3 默认排序之后 --> " + Arrays.toString(a3));

		// 使用comparator对数组进行排序
		Integer[] a4 = new Integer[] { 2, 3, 5, 7, 89, 5, 43, 12, 1, 0, 8 };
		Arrays.parallelSort(a4, new IntegerIncComparator());
		//lambda实现
		Arrays.parallelSort(a4, (o1, o2) -> o1 - o2);
		System.out.println("a4升序排序之后 --> " + Arrays.toString(a4));
		Arrays.parallelSort(a4, new IntegerDescComparator());
		System.out.println("a4降序排序之后 --> " + Arrays.toString(a4));

		// 二分法查找 --> Arrays.binarySearch(a3, 45)
		// 要求数组元素已经按照升序排列，如果没有则返回负数。
		System.out.println("45在a3中的位置为--> " + Arrays.binarySearch(a3, 45));
		System.out.println("100在a3中的位置为--> " + Arrays.binarySearch(a3, 100));
		// 给数组元素填充默认值
		Arrays.fill(a3, 1, 3, 100);
		System.out.println("Arrays.fill() 1 --> 3 : " + Arrays.toString(a3));
		Arrays.fill(a3, 100);
		System.out.println("Arrays.fill() all : " + Arrays.toString(a3));
	}

}
